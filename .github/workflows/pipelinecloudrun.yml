name: GCP Cloud Run Deployment

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      REPO_NAME: cron-ticker
      IMAGE_NAME: cron-ticker
      SERVICE_ACCOUNT: github-actions-deployer@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Grant IAM roles to GitHub Actions Service Account
      run: |
        echo "Asignando roles necesarios a $SERVICE_ACCOUNT..."

        gcloud projects add-iam-policy-binding $PROJECT_ID \
          --member="serviceAccount:$SERVICE_ACCOUNT" \
          --role="roles/run.admin"

        gcloud projects add-iam-policy-binding $PROJECT_ID \
          --member="serviceAccount:$SERVICE_ACCOUNT" \
          --role="roles/artifactregistry.admin"

        gcloud projects add-iam-policy-binding $PROJECT_ID \
          --member="serviceAccount:$SERVICE_ACCOUNT" \
          --role="roles/iam.serviceAccountUser"

    - name: Ensure Artifact Registry Repository Exists
      run: |
        echo "Verificando si el repositorio $REPO_NAME existe..."
        if ! gcloud artifacts repositories describe $REPO_NAME \
            --location=$REGION --project=$PROJECT_ID > /dev/null 2>&1; then
          echo "Repositorio no existe. Creándolo..."
          gcloud artifacts repositories create $REPO_NAME \
            --repository-format=docker \
            --location=$REGION \
            --description="Repo para imágenes de $IMAGE_NAME"
        else
          echo "Repositorio ya existe. Continuando..."
        fi

    - name: Authenticate Docker with Artifact Registry
      run: |
        gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build Docker Image
      run: |
        docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest .

    - name: Push Docker Image to Artifact Registry
      run: |
        docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $IMAGE_NAME \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated




